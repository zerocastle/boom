<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="hikariConfig_fdc" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="jdbcUrl"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:orcl"></property>
		<property name="username" value="ho"></property>
		<property name="password" value="ho"></property>

	</bean>

	<bean id="dataSource_fdc"
		class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig_fdc" />
	</bean>


	<bean id="sqlSessionFactory_fdc"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_fdc" />
		<property name="configLocation"
			value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations"
			value="classpath:mappers/**/*Mapper.xml"></property>
			
	</bean>


	<!-- RedisNodejs세션연동 -->
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="127.0.0.1" />
		<property name="port" value="6379" />
		<!-- <property name="password" value="redis_pw"/> -->
	</bean>

	<bean id="RedisTemplate"
		class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
	
	
	<!-- sqlSession 사용 부분 -->
	<bean id="sqlSession_fdc"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory_fdc"></constructor-arg>
	</bean>
	<!-- 마이바티스 sessionFactory 이용하는 객체선언 -->

	<!-- 트랜잭션 매니저 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_fdc"></property>
	</bean>

	<!-- 트랜잭션 어노 테이션 사용 -->
	<tx:annotation-driven />

	<!-- quartz 스캐줄러 어노테이션 -->
	<task:annotation-driven />


	<!-- @Repoitory를 컴포너트 스캔을한다. -->
	<context:component-scan
		base-package="com.ys.project.dao" />

	<!-- spring interface 매퍼 -->
	<mybatis-spring:scan
		base-package="com.ys.project.dao.admin" />
	<mybatis-spring:scan
		base-package="com.ys.project.dao.sellingUpdate" />
	<mybatis-spring:scan
		base-package="com.ys.project.dao.warningBoard" />
	<mybatis-spring:scan
		base-package="com.ys.project.dao.productionUpload" />
	<mybatis-spring:scan
		base-package="com.ys.project.dao.production" />


	<!-- @Service를 컴포넌트 스캔을 한다. -->
	<context:component-scan
		base-package="com.ys.project.service" />

	<!-- aop 프록시를 사용하기 위한 태그 -->
	<aop:aspectj-autoproxy />

</beans>